# Backend Production Dockerfile
FROM node:18-alpine AS builder

WORKDIR /app

# copy package files from backend directory
COPY backend/package*.json ./

# install all dependencies
RUN npm ci

# copy source code
COPY backend/ ./

# build application
RUN npm run build

# production stage
FROM node:18-alpine

WORKDIR /app

# install dumb-init for better signal handling
RUN apk add --no-cache dumb-init

# create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# copy package files
COPY backend/package*.json ./

# install production dependencies only
RUN npm ci --only=production && \
    npm cache clean --force

# copy built application from builder
COPY --chown=nodejs:nodejs --from=builder /app/dist ./dist

# switch to non-root user
USER nodejs

# expose port
EXPOSE 3000

# use dumb-init to handle processes correctly
ENTRYPOINT ["dumb-init", "--"]

# start the application
CMD ["node", "dist/app.js"]