version: '3.8'

services:
    backend:
        build:
            context: .
            dockerfile: ./docker/Dockerfile-backend
        container_name: loki-backend
        ports:
            - "3000:3000"
        env_file:
            - .env
        networks:
            - loki-network
        healthcheck:
            test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health" ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        volumes:
            - ${MEDIA_PATH}:/media:rw
            - ./loki/transcode:/loki/transcode:rw
            - ./loki/cache:/loki/cache:rw
            - ./loki/metadata:/loki/metadata:rw
        environment:
            - NODE_ENV=production
            - FFMPEG_HWACCEL=${FFMPEG_HWACCEL:-auto}
            # NVIDIA GPU Support
            - NVIDIA_VISIBLE_DEVICES=all
            - NVIDIA_DRIVER_CAPABILITIES=video,compute,utility
            # Intel QuickSync Support
            - INTEL_MEDIA_RUNTIME=1
        # User für Berechtigungen
        user: "1001:1001"
        # GPU Support für Docker Compose 3.8+
        deploy:
            resources:
                reservations:
                    devices:
                        -   driver: nvidia
                            count: 1
                            capabilities: [ gpu ]
        # Hardware Device Mappings für Intel QuickSync
        devices:
            - /dev/dri:/dev/dri
        # Alternative: Privileged für GPU-Zugriff (falls nötig)
        # privileged: true
        restart: unless-stopped

    database:
        image: mariadb
        container_name: loki-database
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DATABASE_NAME}
            MYSQL_USER: ${DATABASE_USER}
            MYSQL_PASSWORD: ${DATABASE_PASSWORD}
            MYSQL_RANDOM_ROOT_PASSWORD: yes
        ports:
            - '3306:3306'
        networks:
            - loki-network
        volumes:
            - ./loki/database:/var/lib/mysql
            - ./database/scripts:/docker-entrypoint-initdb.d

    frontend:
        build:
            context: .
            dockerfile: ./docker/Dockerfile-frontend
            args:
                - VITE_API_URL=/api
        container_name: loki-frontend
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        networks:
            - loki-network
        volumes:
            - ./docker/ssl:/etc/nginx/ssl:ro  # Optional: for SSL-Certificates

networks:
    loki-network:
        driver: bridge